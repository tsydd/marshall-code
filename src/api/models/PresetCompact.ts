/* tslint:disable */
/* eslint-disable */
/**
 * marshall-code-backend-quarkus API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PresetCompact
 */
export interface PresetCompact {
    /**
     * 
     * @type {number}
     * @memberof PresetCompact
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof PresetCompact
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof PresetCompact
     */
    artist?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PresetCompact
     */
    song?: string | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof PresetCompact
     */
    patch: Array<number>;
    /**
     * 
     * @type {Date}
     * @memberof PresetCompact
     */
    createdAt: Date;
}

export function PresetCompactFromJSON(json: any): PresetCompact {
    return PresetCompactFromJSONTyped(json, false);
}

export function PresetCompactFromJSONTyped(json: any, ignoreDiscriminator: boolean): PresetCompact {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'artist': !exists(json, 'artist') ? undefined : json['artist'],
        'song': !exists(json, 'song') ? undefined : json['song'],
        'patch': json['patch'],
        'createdAt': (new Date(json['createdAt'])),
    };
}

export function PresetCompactToJSON(value?: PresetCompact | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'artist': value.artist,
        'song': value.song,
        'patch': value.patch,
        'createdAt': (value.createdAt.toISOString()),
    };
}

